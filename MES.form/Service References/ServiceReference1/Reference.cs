//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MES.form.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double add(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/add", ReplyAction="*")]
        System.Threading.Tasks.Task<double> addAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sub", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double sub(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sub", ReplyAction="*")]
        System.Threading.Tasks.Task<double> subAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mul", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double mul(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mul", ReplyAction="*")]
        System.Threading.Tasks.Task<double> mulAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/div", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double div(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/div", ReplyAction="*")]
        System.Threading.Tasks.Task<double> divAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getjson", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getjson(string jsonText1, string jsonText2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getjson", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getjsonAsync(string jsonText1, string jsonText2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getjsonDT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getjsonDT(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getjsonDT", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getjsonDTAsync(System.Data.DataTable dt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : MES.form.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<MES.form.ServiceReference1.WebService1Soap>, MES.form.ServiceReference1.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public double add(double a, double b) {
            return base.Channel.add(a, b);
        }
        
        public System.Threading.Tasks.Task<double> addAsync(double a, double b) {
            return base.Channel.addAsync(a, b);
        }
        
        public double sub(double a, double b) {
            return base.Channel.sub(a, b);
        }
        
        public System.Threading.Tasks.Task<double> subAsync(double a, double b) {
            return base.Channel.subAsync(a, b);
        }
        
        public double mul(double a, double b) {
            return base.Channel.mul(a, b);
        }
        
        public System.Threading.Tasks.Task<double> mulAsync(double a, double b) {
            return base.Channel.mulAsync(a, b);
        }
        
        public double div(double a, double b) {
            return base.Channel.div(a, b);
        }
        
        public System.Threading.Tasks.Task<double> divAsync(double a, double b) {
            return base.Channel.divAsync(a, b);
        }
        
        public string getjson(string jsonText1, string jsonText2) {
            return base.Channel.getjson(jsonText1, jsonText2);
        }
        
        public System.Threading.Tasks.Task<string> getjsonAsync(string jsonText1, string jsonText2) {
            return base.Channel.getjsonAsync(jsonText1, jsonText2);
        }
        
        public string getjsonDT(System.Data.DataTable dt) {
            return base.Channel.getjsonDT(dt);
        }
        
        public System.Threading.Tasks.Task<string> getjsonDTAsync(System.Data.DataTable dt) {
            return base.Channel.getjsonDTAsync(dt);
        }
    }
}
